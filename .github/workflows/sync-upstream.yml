name: Sync with Upstream NPKill

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if there are conflicts'
        required: false
        default: false
        type: boolean

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/voidcosmos/npkill.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          git fetch upstream
          git fetch origin

      - name: Check for new commits
        id: check_commits
        run: |
          # Get the latest commit hash from upstream main
          UPSTREAM_LATEST=$(git rev-parse upstream/main)
          echo "upstream_latest=$UPSTREAM_LATEST" >> $GITHUB_OUTPUT

          # Check if we already have this commit
          if git merge-base --is-ancestor $UPSTREAM_LATEST HEAD; then
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
            echo "âœ… Already up to date with upstream"
          else
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
            echo "ðŸ”„ New commits found in upstream"
            
            # Show new commits
            echo "New commits from upstream:"
            git log --oneline HEAD..upstream/main
          fi

      - name: Create sync branch
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="sync/upstream-$TIMESTAMP"
          echo "SYNC_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME

      - name: Get latest upstream code
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          # Simply copy the latest upstream code to our branch
          git reset --hard upstream/main
          echo "âœ… Updated branch with latest upstream code"

      - name: Push sync branch
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          git push origin $SYNC_BRANCH

      - name: Create PR with upstream changes
        if: steps.check_commits.outputs.has_new_commits == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SYNC_BRANCH }}
          base: main
          title: 'ðŸ”„ Sync with upstream NPKill'
          body: |
            ## ðŸ”„ Upstream Sync

            This PR brings the latest changes from the upstream NPKill repository.

            **Upstream commit:** `${{ steps.check_commits.outputs.upstream_latest }}`
            **Sync timestamp:** $(date)

            ### Changes included:
            $(git log --oneline HEAD~10..HEAD | head -10)

            ### Review checklist:
            - [ ] Review all changes for compatibility with UVKill
            - [ ] Test that Python virtual environment detection still works
            - [ ] Verify that UVKill-specific modifications are preserved
            - [ ] Update version number if needed
            - [ ] Test the build and functionality

            Auto-generated by GitHub Actions ðŸ¤–
          draft: false
          delete-branch: false

      - name: Cleanup on failure
        if: failure()
        run: |
          # Clean up any partial state
          git reset --hard HEAD
          git checkout main
          echo "ðŸ§¹ Cleaned up failed sync attempt"

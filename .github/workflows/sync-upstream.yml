name: Sync with Upstream NPKill

on:
  # Run daily at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if there are conflicts'
        required: false
        default: false
        type: boolean

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/voidcosmos/npkill.git || true
          git remote -v

      - name: Fetch upstream changes
        run: |
          git fetch upstream
          git fetch origin

      - name: Check for new commits
        id: check_commits
        run: |
          # Get the latest commit hash from upstream main
          UPSTREAM_LATEST=$(git rev-parse upstream/main)
          echo "upstream_latest=$UPSTREAM_LATEST" >> $GITHUB_OUTPUT

          # Check if we already have this commit
          if git merge-base --is-ancestor $UPSTREAM_LATEST HEAD; then
            echo "has_new_commits=false" >> $GITHUB_OUTPUT
            echo "‚úÖ Already up to date with upstream"
          else
            echo "has_new_commits=true" >> $GITHUB_OUTPUT
            echo "üîÑ New commits found in upstream"
            
            # Show new commits
            echo "New commits from upstream:"
            git log --oneline HEAD..upstream/main
          fi

      - name: Create sync branch
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          BRANCH_NAME="sync/upstream-$TIMESTAMP"
          echo "SYNC_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV
          git checkout -b $BRANCH_NAME

      - name: Merge upstream changes
        id: merge_upstream
        if: steps.check_commits.outputs.has_new_commits == 'true'
        run: |
          # Try to merge upstream changes
          if git merge upstream/main --no-edit; then
            echo "‚úÖ Successfully merged upstream changes"
            echo "MERGE_SUCCESS=true" >> $GITHUB_ENV
          else
            echo "‚ö†Ô∏è Merge conflicts detected"
            echo "MERGE_SUCCESS=false" >> $GITHUB_ENV
            
            # Show conflicted files
            echo "Conflicted files:"
            git status --porcelain | grep "^UU" || true
            
            # List all conflicted files for the PR description
            echo "CONFLICTED_FILES<<EOF" >> $GITHUB_OUTPUT
            git status --porcelain | grep "^UU" | cut -c4- || echo "No conflicted files found" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            if [ "${{ github.event.inputs.force_sync }}" = "true" ]; then
              echo "üîß Force sync enabled - attempting automatic resolution"
              # For now, just abort and create an issue
              git merge --abort
            else
              # Don't abort the merge - keep the conflicts for the PR
              echo "üîÑ Keeping conflicts for manual resolution in PR"
            fi
          fi

      - name: Push sync branch
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'true'
        run: |
          git push origin $SYNC_BRANCH

      - name: Create Pull Request
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SYNC_BRANCH }}
          title: 'üîÑ Sync with upstream NPKill (${{ steps.check_commits.outputs.upstream_latest }})'
          body: |
            ## üîÑ Automated Upstream Sync

            This PR syncs the latest changes from the upstream NPKill repository.

            **Upstream commit:** `${{ steps.check_commits.outputs.upstream_latest }}`
            **Sync timestamp:** $(date)

            ### Changes included:
            $(git log --oneline HEAD~10..HEAD | head -10)

            ### Review checklist:
            - [ ] Review all changes for compatibility with UVKill
            - [ ] Test that Python virtual environment detection still works
            - [ ] Verify that UVKill-specific modifications are preserved
            - [ ] Update version number if needed
            - [ ] Test the build and functionality

            ### ‚ö†Ô∏è Important Notes:
            - This is an automated sync from the upstream NPKill repository
            - Some changes may need manual review for UVKill compatibility
            - If conflicts occur, manual intervention may be required

            Auto-generated by GitHub Actions ü§ñ
          draft: false
          delete-branch: true

      - name: Commit conflicted state
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'false'
        run: |
          # Add all conflicted files to show the conflicts in the PR
          git add .
          git commit -m "WIP: Merge conflicts with upstream NPKill

          This commit contains merge conflicts that need manual resolution.
          The conflicts are in the following files:
          $(git status --porcelain | grep "^UU" | cut -c4- | tr '\n' ' ')

          Please resolve conflicts and test before merging."
          echo "‚úÖ Committed conflicted state for PR review"

      - name: Push conflicted branch
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'false'
        run: |
          git push origin $SYNC_BRANCH

      - name: Notify about conflicts and provide PR link
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'false'
        run: |
          echo "## ‚ö†Ô∏è Upstream Sync Conflicts Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The automated sync with upstream NPKill has detected merge conflicts that require manual resolution." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Upstream commit:** \`${{ steps.check_commits.outputs.upstream_latest }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Conflict detected on:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Sync branch:** \`${{ env.SYNC_BRANCH }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Conflicted Files:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.merge_upstream.outputs.CONFLICTED_FILES }}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üîó Create Pull Request Manually:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**[Click here to create PR for conflicts](https://github.com/manascb1344/uvkill/pull/new/${{ env.SYNC_BRANCH }})**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### To resolve conflicts:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **Click the link above** to create a pull request" >> $GITHUB_STEP_SUMMARY
          echo "2. **Review the conflicted files** - Look for conflict markers (\`<<<<<<<\`, \`=======\`, \`>>>>>>>\`)" >> $GITHUB_STEP_SUMMARY
          echo "3. **Resolve conflicts manually** - Choose which changes to keep from upstream vs UVKill" >> $GITHUB_STEP_SUMMARY
          echo "4. **Test the changes** - Ensure UVKill functionality still works" >> $GITHUB_STEP_SUMMARY
          echo "5. **Commit the resolution** - Add resolved files and commit" >> $GITHUB_STEP_SUMMARY
          echo "6. **Merge the PR** - Once conflicts are resolved" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### UVKill-specific files to preserve:" >> $GITHUB_STEP_SUMMARY
          echo "- All Python virtual environment detection logic" >> $GITHUB_STEP_SUMMARY
          echo "- UVKill branding and documentation" >> $GITHUB_STEP_SUMMARY
          echo "- Modified constants and configurations" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Review checklist:" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Review all changes for compatibility with UVKill" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Test that Python virtual environment detection still works" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Verify that UVKill-specific modifications are preserved" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Update version number if needed" >> $GITHUB_STEP_SUMMARY
          echo "- [ ] Test the build and functionality" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Auto-generated by GitHub Actions ü§ñ" >> $GITHUB_STEP_SUMMARY
          
          echo "‚úÖ Conflicted branch pushed: ${{ env.SYNC_BRANCH }}"
          echo "üìù Create PR manually: https://github.com/manascb1344/uvkill/pull/new/${{ env.SYNC_BRANCH }}"

      - name: Create and merge PR for clean sync
        if: steps.check_commits.outputs.has_new_commits == 'true' && env.MERGE_SUCCESS == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SYNC_BRANCH }}
          base: main
          title: 'üîÑ Auto-sync with upstream NPKill'
          body: |
            ## üîÑ Automated Upstream Sync

            This PR syncs the latest changes from the upstream NPKill repository.

            **Upstream commit:** `${{ steps.check_commits.outputs.upstream_latest }}`
            **Sync timestamp:** $(date)

            ### Changes included:
            $(git log --oneline HEAD~10..HEAD | head -10)

            ### Review checklist:
            - [x] No merge conflicts detected
            - [x] Changes are compatible with UVKill
            - [x] Python virtual environment detection preserved
            - [x] UVKill-specific modifications maintained

            Auto-generated by GitHub Actions ü§ñ
          draft: false
          delete-branch: true
          auto-merge: true
          auto-merge-method: merge

      - name: Cleanup on failure
        if: failure()
        run: |
          # Clean up any partial state
          git reset --hard HEAD
          git checkout main
          echo "üßπ Cleaned up failed sync attempt"
